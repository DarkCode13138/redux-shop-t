{"version":3,"sources":["redux/actions/books.js","redux/actions/cart.js","components/BookCard.jsx","containers/BookCard.js","redux/actions/filter.js","components/Filter.jsx","containers/filter.js","components/menu.jsx","containers/menu.js","components/App.jsx","containers/App.js","redux/redusers/books.js","redux/redusers/cart.js","redux/redusers/filter.js","redux/redusers/index.js","serviceWorker.js","index.js","redux/store.js"],"names":["setBooks","books","type","payload","addToCart","obj","removeFromCart","id","BookCard","book","title","author","price","image","addedCount","Card","Image","src","Content","Header","Meta","className","extra","Icon","name","Button","onClick","bind","connect","cart","items","reduce","count","dispatch","bindActionCreators","cartActions","setFilter","filter","setSearchQuery","value","Filter","filterBy","searchQuery","Menu","secondary","Item","active","Input","icon","onChange","e","target","placeholder","filterActions","CartComponent","List","selection","divided","verticalAlign","floated","color","avatar","MenuComponent","totalPrice","position","Popup","trigger","content","map","on","hideOnScroll","total","length","uniqBy","o","App","this","props","axios","get","then","data","isReady","Container","Group","itemsPerRow","i","key","Component","searchBooks","filtersBy","orderBy","sortBy","toLowerCase","indexOf","filtersBooks","booksActions","initialState","combineReducers","state","action","Boolean","window","location","hostname","match","store","createStore","rootReduser","applyMiddleware","logger","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.de8afcb4.chunk.js","sourcesContent":["export  const setBooks = books =>({\r\n    type: 'SET_BOOKS',\r\n    payload: books,\r\n});","export const addToCart = obj => ({\r\n    type: 'ADD_TO_CART',\r\n    payload: obj,\r\n});\r\n\r\nexport const removeFromCart = id => ({\r\n    type: 'REMOVE_FROM_CART',\r\n    payload: id,\r\n});","import React from \"react\";\r\nimport { Card, Icon, Image, Button } from 'semantic-ui-react';\r\n\r\nconst BookCard = book => {\r\n    const {title, author,price,image,addToCart, addedCount} = book;\r\n  return  (\r\n        <Card>\r\n            <Image src={image} />\r\n            <Card.Content>\r\n                <Card.Header>{title}</Card.Header>\r\n                <Card.Meta>\r\n                    <span className='date'>{author}</span>\r\n                </Card.Meta>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <a>\r\n                    <Icon name='rub' />\r\n                    {price}\r\n                </a>\r\n            </Card.Content>\r\n            <Button onClick={addToCart.bind(this, book)}>Добавить в корзину {addedCount > 0 && `(${addedCount})`}</Button>\r\n        </Card>\r\n    )\r\n};\r\nexport default BookCard;","import {connect} from  'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as cartActions from  '../redux/actions/cart';\r\nimport BookCard from \"../components/BookCard\";\r\n\r\n\r\nconst mapStateToProps = ({cart}, {id}) => ({\r\n    addedCount : cart.items.reduce((count, book) => count + (book.id === id ? 1 : 0), 0),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators(cartActions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookCard);\r\n\r\n\r\n","export const setFilter = filter => ({\r\n   type: 'SET_FILTER',\r\n    payload: filter,\r\n});\r\n\r\nexport const setSearchQuery = value => ({\r\n    type: 'SET_QUERY',\r\n    payload: value,\r\n});","import React, {Component} from 'react';\r\nimport { Input, Menu,  } from 'semantic-ui-react';\r\nimport {setSearchQuery} from \"../redux/actions/filter\";\r\n\r\n\r\n\r\n\r\nconst Filter = ({setFilter, filterBy, searchQuery, setSearchQuery}) => {\r\n\r\n\r\n\r\n    return(\r\n        <Menu secondary>\r\n            <Menu.Item\r\n                active={filterBy === 'all'}\r\n                onClick={setFilter.bind(this, 'all')}\r\n            >Все</Menu.Item>\r\n            <Menu.Item\r\n                active={filterBy === 'price_high'}\r\n                onClick={setFilter.bind(this, 'price_high')}\r\n            >Цена(дорогие)</Menu.Item>\r\n            <Menu.Item\r\n                active={filterBy === 'price_low'}\r\n                onClick={setFilter.bind(this, 'price_low')}\r\n            >Цена(дешевые)</Menu.Item>\r\n            <Menu.Item\r\n                active={filterBy === 'author'}\r\n                onClick={setFilter.bind(this, 'author')}\r\n            >Автор</Menu.Item>\r\n            <Menu.Item>\r\n                <Input icon='search' onChange={e => setSearchQuery(e.target.value)} value={searchQuery} placeholder='Введите запрос...'></Input>\r\n           </Menu.Item>\r\n        </Menu>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default Filter;","import {connect} from  'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as filterActions from  '../redux/actions/filter';\r\nimport Filter from \"../components/Filter\";\r\n\r\n\r\nconst mapStateToProps = ({books, filter}) => ({\r\n    filterBy: filter.filterBy,\r\n\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators(filterActions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n\r\n","import React from \"react\";\r\nimport { Menu, Popup, List, Button,Image } from 'semantic-ui-react';\r\n\r\nconst CartComponent = ({title, id, image, removeFromCart}) => (\r\n    <List selection divided verticalAlign='middle'>\r\n        <List.Item>\r\n            <List.Content floated='right'>\r\n                <Button onClick={removeFromCart.bind(this, id)} color='red'>Удалить</Button>\r\n            </List.Content>\r\n            <Image avatar src={image} />\r\n            <List.Content>{title}</List.Content>\r\n        </List.Item>\r\n    </List>\r\n)\r\n\r\nconst MenuComponent = ({totalPrice, count, items}) => {\r\n    return(\r\n\r\n        <Menu>\r\n            <Menu.Item\r\n                name='browse'\r\n\r\n                onClick={this}\r\n            >\r\n                Магазин книг\r\n            </Menu.Item>\r\n            <Menu.Menu position='right'>\r\n                <Menu.Item\r\n                    name='signup'\r\n\r\n                    onClick={this}\r\n                >\r\n                    Итого: &nbsp;<b>{totalPrice}</b> руб.\r\n                </Menu.Item>\r\n\r\n\r\n                <Popup\r\n                  trigger={ <Menu.Item\r\n                    name='help'\r\n\r\n                    onClick={this}\r\n                >\r\n                    Корзина (<b>{count}</b>)\r\n                </Menu.Item>}\r\n                    content={items.map(book => <CartComponent{...book}/>)}\r\n                  on='click'\r\n                  hideOnScroll\r\n                />\r\n\r\n            </Menu.Menu>\r\n        </Menu>\r\n\r\n    )\r\n}\r\n\r\nexport default MenuComponent;\r\n","import {connect} from  'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as cartActions from  '../redux/actions/cart';\r\nimport Menu from \"../components/menu\";\r\nimport uniqBy from 'lodash/uniqBy';\r\n\r\nconst mapStateToProps = ({cart}) => ({\r\n    totalPrice: cart.items.reduce((total, book) => total + book.price, 0),\r\n    count: cart.items.length,\r\n    items: uniqBy(cart.items, o => o.id),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators(cartActions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n\r\n\r\n","import React, {Component} from 'react';\nimport {Container} from 'semantic-ui-react';\nimport axios from 'axios';\nimport BookCard from \"../containers/BookCard\";\nimport Filter from \"../containers/filter\";\nimport Menu from \"../containers/menu\";\nimport {Card} from  'semantic-ui-react';\n\n\nclass App extends Component{\n    componentWillMount() {\n        const {setBooks}  = this.props;\n        axios.get('/books.json').then(({data}) => {\n            setBooks(data);\n\n        });\n\n    }\n\n    render(){\n                const {books, isReady} = this.props;\n        return(\n            <Container>\n        <Menu/>\n        <Filter\n\n        />\n                <Card.Group itemsPerRow={4}>\n                    {!isReady ? 'Загрузка...' :\n                        books.map((book, i) => (\n\n                            <BookCard\n                                 key={i}\n                                 {...book}\n                            />\n                        ))\n                    }\n                </Card.Group>\n            </Container>\n\n            );\n\n    }\n}\n\n\nexport default App;\n","import {connect} from  'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as booksActions from  '../redux/actions/books';\r\nimport App from '../components/App';\r\nimport orderBy from 'lodash/orderBy';\r\n\r\nconst sortBy = (books, filterBy) =>{\r\n\r\n    switch (filterBy) {\r\n        // case 'all' :\r\n\r\n        case 'price_high':\r\n            return orderBy(books, 'price', 'desc');\r\n        case  'price_low' :\r\n            return orderBy(books, 'price', 'asc');\r\n        case  'author' :\r\n            return orderBy(books, 'author', 'asc');\r\n\r\n        default:\r\n            return books;\r\n    }\r\n\r\n};\r\nconst filtersBooks = (books, searchQuery) =>\r\n    books.filter(o =>\r\n        o.title.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0\r\n        || o.author.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0,\r\n    );\r\nconst searchBooks = (books, filtersBy , searchQuery ) =>{\r\n    return sortBy(filtersBooks(books, searchQuery), filtersBy);\r\n}\r\n\r\nconst mapStateToProps = ({books, filter}) => ({\r\n\r\n    books: books.items &&\r\n        searchBooks(books.items, filter.filterBy, filter.searchQuery),\r\n    isReady: books.isReady,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators(booksActions, dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const initialState = {\r\n isReady : false,\r\n  items: null,\r\n\r\n};\r\n\r\nexport  default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_BOOKS' :\r\n            return{\r\n                ...state,\r\n                items: action.payload,\r\n                isReady: true,\r\n            };\r\n        case 'SET_IS_READY':\r\n            return {\r\n            ...state,\r\n                isReady: action.payload,\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\nitems : [\r\n\r\n],\r\n\r\n};\r\n\r\nexport  default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TO_CART' :\r\n            return{\r\n                ...state,\r\n                items: [\r\n                    ...state.items,\r\n                    action.payload,\r\n                ]\r\n\r\n            };\r\n        case 'REMOVE_FROM_CART':\r\n            return {\r\n                ...state,\r\n               items: state.items.filter(o => o.id != action.payload)\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    searchQuery: '',\r\n    filterBy:'all',\r\n};\r\n\r\nexport  default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_QUERY' :\r\n            return{\r\n                ...state,\r\n                searchQuery:action.payload,\r\n            };\r\n        case 'SET_FILTER' :\r\n            return{\r\n                ...state,\r\n                filterBy:action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport books from \"./books\";\r\nimport cart from \"./cart\";\r\nimport filter from \"./filter\";\r\nexport default combineReducers({\r\n    books,\r\n    cart,\r\n    filter\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport createStore from './redux/store';\nimport {Provider} from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport './app.css';\n\nconst store = createStore();\n\n\nReactDOM.render(\n  <Provider store={store}>\n   <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux'\r\nimport logger from 'redux-logger';\r\nimport rootReduser from './redusers';\r\n\r\nexport default () => {\r\n    const  store = createStore(rootReduser, applyMiddleware(logger));\r\n    return store;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}